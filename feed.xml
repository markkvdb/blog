<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://mvanderbroek.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mvanderbroek.com/" rel="alternate" type="text/html" /><updated>2020-11-02T08:59:25-06:00</updated><id>https://mvanderbroek.com/feed.xml</id><title type="html">Mark van der Broek</title><subtitle>Tutorials on Data Science and Operations Research</subtitle><entry><title type="html">Excess Mortality In 2020 (covid 19)</title><link href="https://mvanderbroek.com/r/covid-19/2020/05/26/Excess-Mortality-in-2020-(COVID-19).html" rel="alternate" type="text/html" title="Excess Mortality In 2020 (covid 19)" /><published>2020-05-26T00:00:00-05:00</published><updated>2020-05-26T00:00:00-05:00</updated><id>https://mvanderbroek.com/r/covid-19/2020/05/26/Excess-Mortality-in-2020-(COVID-19)</id><author><name></name></author><category term="R" /><category term="COVID-19" /><summary type="html">Official reported deaths due to COVID-19 are often under-reported for a multitude of reasons. The most important reason is that not all suspected cases get tested. Another way to measure COVID related deaths is to look at official reported total deaths. Administrative delays, however, make it that reported numbers are only reliable from a few weeks in the past. More recent numbers are often missing many deaths. The Human Mortality Database (HMD) provided detailed (yearly) mortality and population data for 41 selected countries. Recently, HMD published a dataset containing weekly mortality numbers in light of the COVID-19 pandemic. In this article we will explore this dataset to obtain insights in excess deaths for different countries.</summary></entry><entry><title type="html">Logistic Regression In Pytorch From Scratch (lesson 2)</title><link href="https://mvanderbroek.com/fast.ai/deep%20learning/machine%20learning/2019/11/08/Logistic-Regression-in-PyTorch-from-Scratch-(Lesson-2).html" rel="alternate" type="text/html" title="Logistic Regression In Pytorch From Scratch (lesson 2)" /><published>2019-11-08T00:00:00-06:00</published><updated>2019-11-08T00:00:00-06:00</updated><id>https://mvanderbroek.com/fast.ai/deep%20learning/machine%20learning/2019/11/08/Logistic-Regression-in-PyTorch-from-Scratch-(Lesson-2)</id><author><name></name></author><category term="fast.ai" /><category term="Deep Learning" /><category term="Machine Learning" /><summary type="html">In this article we will explore the logistic regression and how we can implement it using PyTorch. Contrary to linear regressions where the output variable $y$ is continuous, logistic regressions concern binary variables, i.e.,</summary></entry><entry><title type="html">Common Deep Learning Training Pitfalls (lesson 2)</title><link href="https://mvanderbroek.com/fast.ai/deep%20learning/2019/11/07/Common-Deep-Learning-Training-Pitfalls-(Lesson-2).html" rel="alternate" type="text/html" title="Common Deep Learning Training Pitfalls (lesson 2)" /><published>2019-11-07T00:00:00-06:00</published><updated>2019-11-07T00:00:00-06:00</updated><id>https://mvanderbroek.com/fast.ai/deep%20learning/2019/11/07/Common-Deep-Learning-Training-Pitfalls-(Lesson-2)</id><author><name></name></author><category term="fast.ai" /><category term="Deep Learning" /><summary type="html">In lesson 2 of the fast-ai course discusses a variety of items. First, we will learn how to apply a model in production. Second, common pitfalls are being discussed. I will provide my econometric background on these pitfalls and how they relate to the statistics literature. Lastly, we will explore the inner working of most ML/DL algorithms by discussing the most elementary one: the logistic regression (LATER POST).</summary></entry><entry><title type="html">Airplane Classifier With Fast.ai Library (lesson 1)</title><link href="https://mvanderbroek.com/fast.ai/deep%20learning/2019/11/06/Airplane-Classifier-with-Fast.ai-library-(Lesson-1).html" rel="alternate" type="text/html" title="Airplane Classifier With Fast.ai Library (lesson 1)" /><published>2019-11-06T00:00:00-06:00</published><updated>2019-11-06T00:00:00-06:00</updated><id>https://mvanderbroek.com/fast.ai/deep%20learning/2019/11/06/Airplane-Classifier-with-Fast.ai-library-(Lesson-1)</id><author><name></name></author><category term="fast.ai" /><category term="Deep Learning" /><summary type="html">The fast.ai deep learning course is a practical top-down deep learning course for practicioners. Immediately after the first two hour lecture, it is possible to train an image classifier on your own dataset using state-of-the-art deep learning techniques. The reason for this accesibility is the excellent fast.ai software which builds upon the popular PyTorch deep learning library.</summary></entry><entry><title type="html">Custom Data Splitter Function In Python</title><link href="https://mvanderbroek.com/python/2019/10/31/Custom-Data-Splitter-Function-in-Python.html" rel="alternate" type="text/html" title="Custom Data Splitter Function In Python" /><published>2019-10-31T00:00:00-05:00</published><updated>2019-10-31T00:00:00-05:00</updated><id>https://mvanderbroek.com/python/2019/10/31/Custom-Data-Splitter-Function-in-Python</id><author><name></name></author><category term="Python" /><summary type="html">Ths month I started with the excellent Deep Learning course by fast.ai and I just finished the first lesson. At the end of the lesson Jeremy, the teacher of the course, assigned a homework assignment to create an image classifier using our own data. After downloading my own dataset I was facing the problem that I wanted to split this dataset into a training and test set using seperate directories but I could not easily find such a program online. Therefore, in this blog post, I will explain how to write such a program and how to make this program easily installable and useable for anyone. I will discuss how to properly handle arguments for command line programs and how to make your software available to download from pip.</summary></entry><entry><title type="html">Hidden Markov Model Tutorial In R</title><link href="https://mvanderbroek.com/r/machine%20learning/2019/05/08/Hidden-Markov-Model-Tutorial-in-R.html" rel="alternate" type="text/html" title="Hidden Markov Model Tutorial In R" /><published>2019-05-08T00:00:00-05:00</published><updated>2019-05-08T00:00:00-05:00</updated><id>https://mvanderbroek.com/r/machine%20learning/2019/05/08/Hidden-Markov-Model-Tutorial-in-R</id><author><name></name></author><category term="R" /><category term="Machine Learning" /><summary type="html">This document contains an introduction to Hidden Markov Models (HMMs). First, a brief description and the main problems of HMMs will discussed. After, I will provide common strategies to analyse these problems. Lastly, I apply the HMM framework on a speech recognition problem.</summary></entry><entry><title type="html">Predicting Sale Prices Of Houses In Ames</title><link href="https://mvanderbroek.com/machine%20learning/python/2018/10/07/Predicting-Sale-Prices-of-Houses-in-Ames.html" rel="alternate" type="text/html" title="Predicting Sale Prices Of Houses In Ames" /><published>2018-10-07T00:00:00-05:00</published><updated>2018-10-07T00:00:00-05:00</updated><id>https://mvanderbroek.com/machine%20learning/python/2018/10/07/Predicting-Sale-Prices-of-Houses-in-Ames</id><author><name></name></author><category term="Machine Learning" /><category term="Python" /><summary type="html">In this tutorial I will discuss how you can go from a raw dataset to a predictive model. For this tutorial we will make use of the Ames Dataset and see whether we can predict house prices based on characteristics provided in the dataset.</summary></entry><entry><title type="html">Train Xor Logic Gate In Neural Network</title><link href="https://mvanderbroek.com/deep%20learning/python/2018/09/26/Train-XOR-Logic-Gate-in-Neural-Network.html" rel="alternate" type="text/html" title="Train Xor Logic Gate In Neural Network" /><published>2018-09-26T00:00:00-05:00</published><updated>2018-09-26T00:00:00-05:00</updated><id>https://mvanderbroek.com/deep%20learning/python/2018/09/26/Train-XOR-Logic-Gate-in-Neural-Network</id><author><name></name></author><category term="Deep Learning" /><category term="Python" /><summary type="html">Deep learning (DL) is a thriving research field with an increasing number of practical applications. One of the models used in DL are so called artificial neural networks (ANN). In this tutorial I will not discuss exactly how these ANNs work, but instead I will show how flexible these models can be by training an ANN that will act as a XOR logic gate.</summary></entry><entry><title type="html">Map Plots In R In A Tidyverse Way</title><link href="https://mvanderbroek.com/r/visualisation/2018/09/19/Map-Plots-in-R-in-a-Tidyverse-Way.html" rel="alternate" type="text/html" title="Map Plots In R In A Tidyverse Way" /><published>2018-09-19T00:00:00-05:00</published><updated>2018-09-19T00:00:00-05:00</updated><id>https://mvanderbroek.com/r/visualisation/2018/09/19/Map-Plots-in-R-in-a-Tidyverse-Way</id><author><name></name></author><category term="R" /><category term="Visualisation" /><summary type="html">I show how you can plot your own map in R using a few lines of code using a pipe-based workflow. Several powerful functions of the sf packages are presented.</summary></entry></feed>